// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        xBlockCount: {
            value : 30.0,
        }
        yBlockCount: {
            value : 30.0
        }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if USE_TEXTURE
    v_uv0 = a_uv0;

      #if CC_USE_MODEL
      pos = cc_matViewProj * cc_matWorld * pos;
      #else
      pos = cc_matViewProj * pos;
      #endif
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;

  #if USE_MOSAIC
  uniform blockSize {
    float xBlockCount;
    float yBlockCount;
  };

  vec2 getRealPos() {
    float xCount;
    if (xBlockCount <= 0.0) {
        xCount = 1.0;
    } else {
        xCount = xBlockCount;
    }

    float width = 1.0 / xCount;
    float widthIndex = floor(v_uv0.x / width);

    float yCount;
    if (yBlockCount <= 0.0) {
        yCount = 1.0;
    } else {
        yCount = yBlockCount;
    }

    float height = 1.0 / yCount;
    float heightIndex = floor(v_uv0.y / height);

    return vec2(width * (widthIndex + 0.5), height * (heightIndex + 0.5));
  }
  #endif

  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
        
    #if USE_TEXTURE

      vec2 realPos = v_uv0;
      #if USE_MOSAIC
      realPos = getRealPos();
      #endif

    o *= texture(texture, realPos);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, realPos + vec2(0, 0.5)).r;
      #endif
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
